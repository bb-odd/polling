{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "PollClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "PollCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "voteIndex",
          "type": "uint8"
        }
      ],
      "name": "Voted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pollId",
          "type": "uint256"
        }
      ],
      "name": "closePoll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_question",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_options",
          "type": "string[]"
        }
      ],
      "name": "createPoll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAddressPollIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pollId",
          "type": "uint256"
        }
      ],
      "name": "getAddressVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pollId",
          "type": "uint256"
        }
      ],
      "name": "getPoll",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "pollOwner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "question",
              "type": "string"
            },
            {
              "internalType": "enum Polling.PollState",
              "name": "pollState",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "votes",
              "type": "uint256[]"
            },
            {
              "internalType": "string[]",
              "name": "options",
              "type": "string[]"
            }
          ],
          "internalType": "struct Polling.Poll",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ids",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_voteIndex",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_pollId",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf3a17a759cffaf62de65d9e31976f75e5efffe70b42e82db298c56d7f33175bc",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1761562",
    "logsBloom": "0x
    "blockHash": "0x20540f984ec4de2c7c7dcd2f52911f9a0e0b86de4eb22b14076051b2df0e7861",
    "transactionHash": "0xf3a17a759cffaf62de65d9e31976f75e5efffe70b42e82db298c56d7f33175bc",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1761562",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "39932f92d2dc56676cf272f9d82eeb31",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"PollClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"PollCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"voteIndex\",\"type\":\"uint8\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pollId\",\"type\":\"uint256\"}],\"name\":\"closePoll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_question\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_options\",\"type\":\"string[]\"}],\"name\":\"createPoll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddressPollIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pollId\",\"type\":\"uint256\"}],\"name\":\"getAddressVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pollId\",\"type\":\"uint256\"}],\"name\":\"getPoll\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"pollOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"question\",\"type\":\"string\"},{\"internalType\":\"enum Polling.PollState\",\"name\":\"pollState\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"votes\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"options\",\"type\":\"string[]\"}],\"internalType\":\"struct Polling.Poll\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_voteIndex\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_pollId\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Polling.sol\":\"Polling\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Polling.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\n\\n// Uncomment this line to use console.log\\n// import \\\"hardhat/console.sol\\\";\\n\\ncontract Polling {\\n    /* TYPE DECLARATIONS */\\n    struct Poll {\\n        address pollOwner;\\n        string question;\\n        PollState pollState;\\n        uint256 id;\\n        uint256[] votes;\\n        string[] options;\\n    }\\n\\n    enum PollState {\\n        OPEN,\\n        CLOSED\\n    }\\n\\n    /* STATE VARIABLES */\\n    address public owner;\\n    uint256[] public ids;\\n    mapping(uint256 => Poll) idToPoll;\\n    mapping(address => uint256[]) addressToIds;\\n    mapping(address => mapping(uint256 => bool)) addressToVoted;\\n    uint256 currentId = 0;\\n\\n    modifier onlyPollOwner(uint256 _pollId) {\\n        require(\\n            idToPoll[_pollId].pollOwner == msg.sender,\\n            \\\"Function caller is not poll owner\\\"\\n        );\\n        _;\\n    }\\n\\n    /* EVENTS */\\n    event PollCreated(uint256 id, address owner);\\n    event Voted(uint256 id, address voter, uint8 voteIndex);\\n    event PollClosed(uint256 id, address owner);\\n\\n    constructor() public {\\n        owner = msg.sender;\\n    }\\n\\n    function createPoll(\\n        string memory _question,\\n        string[] memory _options\\n    ) external {\\n        require(_options.length > 1 && _options.length <= 4);\\n        Poll memory poll;\\n        poll.pollOwner = msg.sender;\\n        poll.id = currentId;\\n        poll.question = _question;\\n        poll.options = _options;\\n        idToPoll[currentId] = poll;\\n        addressToIds[msg.sender].push(currentId);\\n        ids.push(currentId);\\n        emit PollCreated(currentId, msg.sender);\\n        currentId++;\\n    }\\n\\n    function vote(uint8 _voteIndex, uint256 _pollId) external {\\n        require(\\n            _voteIndex >= 0 &&\\n                _voteIndex <= idToPoll[_pollId].options.length - 1,\\n            \\\"Selected index is out of range\\\"\\n        );\\n        require(\\n            addressToVoted[msg.sender][_pollId] == false,\\n            \\\"Function caller has already voted on the poll\\\"\\n        );\\n        require(\\n            idToPoll[_pollId].pollState == PollState.OPEN,\\n            \\\"Poll has closed\\\"\\n        );\\n        require(\\n            idToPoll[_voteIndex].pollOwner != address(0),\\n            \\\"Poll doesn't exist\\\"\\n        );\\n        idToPoll[_pollId].votes[_voteIndex] += 1;\\n        addressToVoted[msg.sender][_pollId] = true;\\n        emit Voted(_pollId, msg.sender, _voteIndex);\\n    }\\n\\n    function closePoll(uint256 _pollId) external onlyPollOwner(_pollId) {\\n        require(\\n            idToPoll[_pollId].pollOwner != address(0),\\n            \\\"Poll doesn't exist\\\"\\n        );\\n        idToPoll[_pollId].pollState = PollState.CLOSED;\\n        emit PollClosed(_pollId, msg.sender);\\n    }\\n\\n    function getPoll(uint256 _pollId) public view returns (Poll memory) {\\n        return idToPoll[_pollId];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return owner;\\n    }\\n\\n    function getIds() public view returns (uint256[] memory) {\\n        return ids;\\n    }\\n\\n    function getAddressPollIds() public view returns (uint256[] memory) {\\n        return addressToIds[msg.sender];\\n    }\\n\\n    function getAddressVoted(uint256 _pollId) public view returns (bool) {\\n        return addressToVoted[msg.sender][_pollId];\\n    }\\n\\n    function getCurrentId() public view returns (uint256) {\\n        return currentId;\\n    }\\n}\\n\",\"keccak256\":\"0x6855f53cb51192a4c77b91240ee419889ffabefd3427a6d60dba90e8275c1714\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x6080604052600060055534801561001557600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611e8b806100656000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063893d20e811610071578063893d20e8146101665780638da5cb5b146101845780639534e637146101a2578063d3f29ace146101be578063f8fed27c146101da578063fac333ac146101f8576100a9565b8063152d534e146100ae5780631a8cbcaa146100de5780632b1056631461010e5780636c1438621461012c5780637e3d71c31461014a575b600080fd5b6100c860048036038101906100c39190610fac565b610228565b6040516100d59190610ff4565b60405180910390f35b6100f860048036038101906100f39190610fac565b61028f565b604051610105919061136e565b60405180910390f35b61011661051a565b60405161012391906113ff565b60405180910390f35b610134610572565b6040516101419190611430565b60405180910390f35b610164600480360381019061015f9190611666565b61057c565b005b61016e6107cb565b60405161017b91906116ed565b60405180910390f35b61018c6107f4565b60405161019991906116ed565b60405180910390f35b6101bc60048036038101906101b79190610fac565b610818565b005b6101d860048036038101906101d39190611741565b6109de565b005b6101e2610d24565b6040516101ef91906113ff565b60405180910390f35b610212600480360381019061020d9190610fac565b610db9565b60405161021f9190611430565b60405180910390f35b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff169050919050565b610297610ddd565b600260008381526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461031b906117b0565b80601f0160208091040260200160405190810160405280929190818152602001828054610347906117b0565b80156103945780601f1061036957610100808354040283529160200191610394565b820191906000526020600020905b81548152906001019060200180831161037757829003601f168201915b505050505081526020016002820160009054906101000a900460ff1660018111156103c2576103c16110e0565b5b60018111156103d4576103d36110e0565b5b8152602001600382015481526020016004820180548060200260200160405190810160405280929190818152602001828054801561043157602002820191906000526020600020905b81548152602001906001019080831161041d575b5050505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b8282101561050b57838290600052602060002001805461047e906117b0565b80601f01602080910402602001604051908101604052809291908181526020018280546104aa906117b0565b80156104f75780601f106104cc576101008083540402835291602001916104f7565b820191906000526020600020905b8154815290600101906020018083116104da57829003601f168201915b50505050508152602001906001019061045f565b50505050815250509050919050565b6060600180548060200260200160405190810160405280929190818152602001828054801561056857602002820191906000526020600020905b815481526020019060010190808311610554575b5050505050905090565b6000600554905090565b6001815111801561058f57506004815111155b61059857600080fd5b6105a0610ddd565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600554816060018181525050828160200181905250818160a001819052508060026000600554815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019081610668919061198d565b5060408201518160020160006101000a81548160ff02191690836001811115610694576106936110e0565b5b02179055506060820151816003015560808201518160040190805190602001906106bf929190610e3b565b5060a08201518160050190805190602001906106dc929190610e88565b50905050600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005549080600181540180825580915050600190039060005260206000200160009091909190915055600160055490806001815401808255809150506001900390600052602060002001600090919091909150557fb447d309fd3b1a27466cdb08ccc02ee5188e9c71fc58af042bafe3e0bb451230600554336040516107a6929190611a5f565b60405180910390a1600560008154809291906107c190611ab7565b9190505550505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b803373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b490611b82565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610962576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095990611bee565b60405180910390fd5b60016002600084815260200190815260200160002060020160006101000a81548160ff0219169083600181111561099c5761099b6110e0565b5b02179055507f5f9f4b9200056c29dcdf9532acb77e0d5368e9f85580b6e1aeff24c36bddea2b82336040516109d2929190611a5f565b60405180910390a15050565b60008260ff1610158015610a1a575060016002600083815260200190815260200160002060050180549050610a139190611c0e565b8260ff1611155b610a59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5090611c8e565b60405180910390fd5b60001515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16151514610afd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af490611d20565b60405180910390fd5b60006001811115610b1157610b106110e0565b5b6002600083815260200190815260200160002060020160009054906101000a900460ff166001811115610b4757610b466110e0565b5b14610b87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7e90611d8c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008460ff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610c2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2690611bee565b60405180910390fd5b6001600260008381526020019081526020016000206004018360ff1681548110610c5c57610c5b611dac565b5b906000526020600020016000828254610c759190611ddb565b925050819055506001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055507f094f80829c509370abb2d421a078ba5926755d3de25d021dacf7bbd19853f7a2813384604051610d1893929190611e1e565b60405180910390a15050565b6060600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610daf57602002820191906000526020600020905b815481526020019060010190808311610d9b575b5050505050905090565b60018181548110610dc957600080fd5b906000526020600020016000915090505481565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160006001811115610e2057610e1f6110e0565b5b81526020016000815260200160608152602001606081525090565b828054828255906000526020600020908101928215610e77579160200282015b82811115610e76578251825591602001919060010190610e5b565b5b509050610e849190610ee1565b5090565b828054828255906000526020600020908101928215610ed0579160200282015b82811115610ecf578251829081610ebf919061198d565b5091602001919060010190610ea8565b5b509050610edd9190610efe565b5090565b5b80821115610efa576000816000905550600101610ee2565b5090565b5b80821115610f1e5760008181610f159190610f22565b50600101610eff565b5090565b508054610f2e906117b0565b6000825580601f10610f405750610f5f565b601f016020900490600052602060002090810190610f5e9190610ee1565b5b50565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610f8981610f76565b8114610f9457600080fd5b50565b600081359050610fa681610f80565b92915050565b600060208284031215610fc257610fc1610f6c565b5b6000610fd084828501610f97565b91505092915050565b60008115159050919050565b610fee81610fd9565b82525050565b60006020820190506110096000830184610fe5565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061103a8261100f565b9050919050565b61104a8161102f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561108a57808201518184015260208101905061106f565b60008484015250505050565b6000601f19601f8301169050919050565b60006110b282611050565b6110bc818561105b565b93506110cc81856020860161106c565b6110d581611096565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106111205761111f6110e0565b5b50565b60008190506111318261110f565b919050565b600061114182611123565b9050919050565b61115181611136565b82525050565b61116081610f76565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061119e8383611157565b60208301905092915050565b6000602082019050919050565b60006111c282611166565b6111cc8185611171565b93506111d783611182565b8060005b838110156112085781516111ef8882611192565b97506111fa836111aa565b9250506001810190506111db565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061124d83836110a7565b905092915050565b6000602082019050919050565b600061126d82611215565b6112778185611220565b93508360208202850161128985611231565b8060005b858110156112c557848403895281516112a68582611241565b94506112b183611255565b925060208a0199505060018101905061128d565b50829750879550505050505092915050565b600060c0830160008301516112ef6000860182611041565b506020830151848203602086015261130782826110a7565b915050604083015161131c6040860182611148565b50606083015161132f6060860182611157565b506080830151848203608086015261134782826111b7565b91505060a083015184820360a08601526113618282611262565b9150508091505092915050565b6000602082019050818103600083015261138881846112d7565b905092915050565b600082825260208201905092915050565b60006113ac82611166565b6113b68185611390565b93506113c183611182565b8060005b838110156113f25781516113d98882611192565b97506113e4836111aa565b9250506001810190506113c5565b5085935050505092915050565b6000602082019050818103600083015261141981846113a1565b905092915050565b61142a81610f76565b82525050565b60006020820190506114456000830184611421565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61148d82611096565b810181811067ffffffffffffffff821117156114ac576114ab611455565b5b80604052505050565b60006114bf610f62565b90506114cb8282611484565b919050565b600067ffffffffffffffff8211156114eb576114ea611455565b5b6114f482611096565b9050602081019050919050565b82818337600083830152505050565b600061152361151e846114d0565b6114b5565b90508281526020810184848401111561153f5761153e611450565b5b61154a848285611501565b509392505050565b600082601f8301126115675761156661144b565b5b8135611577848260208601611510565b91505092915050565b600067ffffffffffffffff82111561159b5761159a611455565b5b602082029050602081019050919050565b600080fd5b60006115c46115bf84611580565b6114b5565b905080838252602082019050602084028301858111156115e7576115e66115ac565b5b835b8181101561162e57803567ffffffffffffffff81111561160c5761160b61144b565b5b8086016116198982611552565b855260208501945050506020810190506115e9565b5050509392505050565b600082601f83011261164d5761164c61144b565b5b813561165d8482602086016115b1565b91505092915050565b6000806040838503121561167d5761167c610f6c565b5b600083013567ffffffffffffffff81111561169b5761169a610f71565b5b6116a785828601611552565b925050602083013567ffffffffffffffff8111156116c8576116c7610f71565b5b6116d485828601611638565b9150509250929050565b6116e78161102f565b82525050565b600060208201905061170260008301846116de565b92915050565b600060ff82169050919050565b61171e81611708565b811461172957600080fd5b50565b60008135905061173b81611715565b92915050565b6000806040838503121561175857611757610f6c565b5b60006117668582860161172c565b925050602061177785828601610f97565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806117c857607f821691505b6020821081036117db576117da611781565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026118437fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611806565b61184d8683611806565b95508019841693508086168417925050509392505050565b6000819050919050565b600061188a61188561188084610f76565b611865565b610f76565b9050919050565b6000819050919050565b6118a48361186f565b6118b86118b082611891565b848454611813565b825550505050565b600090565b6118cd6118c0565b6118d881848461189b565b505050565b5b818110156118fc576118f16000826118c5565b6001810190506118de565b5050565b601f82111561194157611912816117e1565b61191b846117f6565b8101602085101561192a578190505b61193e611936856117f6565b8301826118dd565b50505b505050565b600082821c905092915050565b600061196460001984600802611946565b1980831691505092915050565b600061197d8383611953565b9150826002028217905092915050565b61199682611050565b67ffffffffffffffff8111156119af576119ae611455565b5b6119b982546117b0565b6119c4828285611900565b600060209050601f8311600181146119f757600084156119e5578287015190505b6119ef8582611971565b865550611a57565b601f198416611a05866117e1565b60005b82811015611a2d57848901518255600182019150602085019450602081019050611a08565b86831015611a4a5784890151611a46601f891682611953565b8355505b6001600288020188555050505b505050505050565b6000604082019050611a746000830185611421565b611a8160208301846116de565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ac282610f76565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611af457611af3611a88565b5b600182019050919050565b600082825260208201905092915050565b7f46756e6374696f6e2063616c6c6572206973206e6f7420706f6c6c206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b6c602183611aff565b9150611b7782611b10565b604082019050919050565b60006020820190508181036000830152611b9b81611b5f565b9050919050565b7f506f6c6c20646f65736e27742065786973740000000000000000000000000000600082015250565b6000611bd8601283611aff565b9150611be382611ba2565b602082019050919050565b60006020820190508181036000830152611c0781611bcb565b9050919050565b6000611c1982610f76565b9150611c2483610f76565b9250828203905081811115611c3c57611c3b611a88565b5b92915050565b7f53656c656374656420696e646578206973206f7574206f662072616e67650000600082015250565b6000611c78601e83611aff565b9150611c8382611c42565b602082019050919050565b60006020820190508181036000830152611ca781611c6b565b9050919050565b7f46756e6374696f6e2063616c6c65722068617320616c726561647920766f746560008201527f64206f6e2074686520706f6c6c00000000000000000000000000000000000000602082015250565b6000611d0a602d83611aff565b9150611d1582611cae565b604082019050919050565b60006020820190508181036000830152611d3981611cfd565b9050919050565b7f506f6c6c2068617320636c6f7365640000000000000000000000000000000000600082015250565b6000611d76600f83611aff565b9150611d8182611d40565b602082019050919050565b60006020820190508181036000830152611da581611d69565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611de682610f76565b9150611df183610f76565b9250828201905080821115611e0957611e08611a88565b5b92915050565b611e1881611708565b82525050565b6000606082019050611e336000830186611421565b611e4060208301856116de565b611e4d6040830184611e0f565b94935050505056fea26469706673582212203a3c574a3b3f7a3f57645499489463199a3ad8b755fe9d450abaa38369e306fb64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063893d20e811610071578063893d20e8146101665780638da5cb5b146101845780639534e637146101a2578063d3f29ace146101be578063f8fed27c146101da578063fac333ac146101f8576100a9565b8063152d534e146100ae5780631a8cbcaa146100de5780632b1056631461010e5780636c1438621461012c5780637e3d71c31461014a575b600080fd5b6100c860048036038101906100c39190610fac565b610228565b6040516100d59190610ff4565b60405180910390f35b6100f860048036038101906100f39190610fac565b61028f565b604051610105919061136e565b60405180910390f35b61011661051a565b60405161012391906113ff565b60405180910390f35b610134610572565b6040516101419190611430565b60405180910390f35b610164600480360381019061015f9190611666565b61057c565b005b61016e6107cb565b60405161017b91906116ed565b60405180910390f35b61018c6107f4565b60405161019991906116ed565b60405180910390f35b6101bc60048036038101906101b79190610fac565b610818565b005b6101d860048036038101906101d39190611741565b6109de565b005b6101e2610d24565b6040516101ef91906113ff565b60405180910390f35b610212600480360381019061020d9190610fac565b610db9565b60405161021f9190611430565b60405180910390f35b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff169050919050565b610297610ddd565b600260008381526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461031b906117b0565b80601f0160208091040260200160405190810160405280929190818152602001828054610347906117b0565b80156103945780601f1061036957610100808354040283529160200191610394565b820191906000526020600020905b81548152906001019060200180831161037757829003601f168201915b505050505081526020016002820160009054906101000a900460ff1660018111156103c2576103c16110e0565b5b60018111156103d4576103d36110e0565b5b8152602001600382015481526020016004820180548060200260200160405190810160405280929190818152602001828054801561043157602002820191906000526020600020905b81548152602001906001019080831161041d575b5050505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b8282101561050b57838290600052602060002001805461047e906117b0565b80601f01602080910402602001604051908101604052809291908181526020018280546104aa906117b0565b80156104f75780601f106104cc576101008083540402835291602001916104f7565b820191906000526020600020905b8154815290600101906020018083116104da57829003601f168201915b50505050508152602001906001019061045f565b50505050815250509050919050565b6060600180548060200260200160405190810160405280929190818152602001828054801561056857602002820191906000526020600020905b815481526020019060010190808311610554575b5050505050905090565b6000600554905090565b6001815111801561058f57506004815111155b61059857600080fd5b6105a0610ddd565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600554816060018181525050828160200181905250818160a001819052508060026000600554815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019081610668919061198d565b5060408201518160020160006101000a81548160ff02191690836001811115610694576106936110e0565b5b02179055506060820151816003015560808201518160040190805190602001906106bf929190610e3b565b5060a08201518160050190805190602001906106dc929190610e88565b50905050600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005549080600181540180825580915050600190039060005260206000200160009091909190915055600160055490806001815401808255809150506001900390600052602060002001600090919091909150557fb447d309fd3b1a27466cdb08ccc02ee5188e9c71fc58af042bafe3e0bb451230600554336040516107a6929190611a5f565b60405180910390a1600560008154809291906107c190611ab7565b9190505550505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b803373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b490611b82565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610962576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095990611bee565b60405180910390fd5b60016002600084815260200190815260200160002060020160006101000a81548160ff0219169083600181111561099c5761099b6110e0565b5b02179055507f5f9f4b9200056c29dcdf9532acb77e0d5368e9f85580b6e1aeff24c36bddea2b82336040516109d2929190611a5f565b60405180910390a15050565b60008260ff1610158015610a1a575060016002600083815260200190815260200160002060050180549050610a139190611c0e565b8260ff1611155b610a59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5090611c8e565b60405180910390fd5b60001515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16151514610afd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af490611d20565b60405180910390fd5b60006001811115610b1157610b106110e0565b5b6002600083815260200190815260200160002060020160009054906101000a900460ff166001811115610b4757610b466110e0565b5b14610b87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7e90611d8c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008460ff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610c2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2690611bee565b60405180910390fd5b6001600260008381526020019081526020016000206004018360ff1681548110610c5c57610c5b611dac565b5b906000526020600020016000828254610c759190611ddb565b925050819055506001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055507f094f80829c509370abb2d421a078ba5926755d3de25d021dacf7bbd19853f7a2813384604051610d1893929190611e1e565b60405180910390a15050565b6060600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610daf57602002820191906000526020600020905b815481526020019060010190808311610d9b575b5050505050905090565b60018181548110610dc957600080fd5b906000526020600020016000915090505481565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160006001811115610e2057610e1f6110e0565b5b81526020016000815260200160608152602001606081525090565b828054828255906000526020600020908101928215610e77579160200282015b82811115610e76578251825591602001919060010190610e5b565b5b509050610e849190610ee1565b5090565b828054828255906000526020600020908101928215610ed0579160200282015b82811115610ecf578251829081610ebf919061198d565b5091602001919060010190610ea8565b5b509050610edd9190610efe565b5090565b5b80821115610efa576000816000905550600101610ee2565b5090565b5b80821115610f1e5760008181610f159190610f22565b50600101610eff565b5090565b508054610f2e906117b0565b6000825580601f10610f405750610f5f565b601f016020900490600052602060002090810190610f5e9190610ee1565b5b50565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610f8981610f76565b8114610f9457600080fd5b50565b600081359050610fa681610f80565b92915050565b600060208284031215610fc257610fc1610f6c565b5b6000610fd084828501610f97565b91505092915050565b60008115159050919050565b610fee81610fd9565b82525050565b60006020820190506110096000830184610fe5565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061103a8261100f565b9050919050565b61104a8161102f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561108a57808201518184015260208101905061106f565b60008484015250505050565b6000601f19601f8301169050919050565b60006110b282611050565b6110bc818561105b565b93506110cc81856020860161106c565b6110d581611096565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106111205761111f6110e0565b5b50565b60008190506111318261110f565b919050565b600061114182611123565b9050919050565b61115181611136565b82525050565b61116081610f76565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061119e8383611157565b60208301905092915050565b6000602082019050919050565b60006111c282611166565b6111cc8185611171565b93506111d783611182565b8060005b838110156112085781516111ef8882611192565b97506111fa836111aa565b9250506001810190506111db565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061124d83836110a7565b905092915050565b6000602082019050919050565b600061126d82611215565b6112778185611220565b93508360208202850161128985611231565b8060005b858110156112c557848403895281516112a68582611241565b94506112b183611255565b925060208a0199505060018101905061128d565b50829750879550505050505092915050565b600060c0830160008301516112ef6000860182611041565b506020830151848203602086015261130782826110a7565b915050604083015161131c6040860182611148565b50606083015161132f6060860182611157565b506080830151848203608086015261134782826111b7565b91505060a083015184820360a08601526113618282611262565b9150508091505092915050565b6000602082019050818103600083015261138881846112d7565b905092915050565b600082825260208201905092915050565b60006113ac82611166565b6113b68185611390565b93506113c183611182565b8060005b838110156113f25781516113d98882611192565b97506113e4836111aa565b9250506001810190506113c5565b5085935050505092915050565b6000602082019050818103600083015261141981846113a1565b905092915050565b61142a81610f76565b82525050565b60006020820190506114456000830184611421565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61148d82611096565b810181811067ffffffffffffffff821117156114ac576114ab611455565b5b80604052505050565b60006114bf610f62565b90506114cb8282611484565b919050565b600067ffffffffffffffff8211156114eb576114ea611455565b5b6114f482611096565b9050602081019050919050565b82818337600083830152505050565b600061152361151e846114d0565b6114b5565b90508281526020810184848401111561153f5761153e611450565b5b61154a848285611501565b509392505050565b600082601f8301126115675761156661144b565b5b8135611577848260208601611510565b91505092915050565b600067ffffffffffffffff82111561159b5761159a611455565b5b602082029050602081019050919050565b600080fd5b60006115c46115bf84611580565b6114b5565b905080838252602082019050602084028301858111156115e7576115e66115ac565b5b835b8181101561162e57803567ffffffffffffffff81111561160c5761160b61144b565b5b8086016116198982611552565b855260208501945050506020810190506115e9565b5050509392505050565b600082601f83011261164d5761164c61144b565b5b813561165d8482602086016115b1565b91505092915050565b6000806040838503121561167d5761167c610f6c565b5b600083013567ffffffffffffffff81111561169b5761169a610f71565b5b6116a785828601611552565b925050602083013567ffffffffffffffff8111156116c8576116c7610f71565b5b6116d485828601611638565b9150509250929050565b6116e78161102f565b82525050565b600060208201905061170260008301846116de565b92915050565b600060ff82169050919050565b61171e81611708565b811461172957600080fd5b50565b60008135905061173b81611715565b92915050565b6000806040838503121561175857611757610f6c565b5b60006117668582860161172c565b925050602061177785828601610f97565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806117c857607f821691505b6020821081036117db576117da611781565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026118437fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611806565b61184d8683611806565b95508019841693508086168417925050509392505050565b6000819050919050565b600061188a61188561188084610f76565b611865565b610f76565b9050919050565b6000819050919050565b6118a48361186f565b6118b86118b082611891565b848454611813565b825550505050565b600090565b6118cd6118c0565b6118d881848461189b565b505050565b5b818110156118fc576118f16000826118c5565b6001810190506118de565b5050565b601f82111561194157611912816117e1565b61191b846117f6565b8101602085101561192a578190505b61193e611936856117f6565b8301826118dd565b50505b505050565b600082821c905092915050565b600061196460001984600802611946565b1980831691505092915050565b600061197d8383611953565b9150826002028217905092915050565b61199682611050565b67ffffffffffffffff8111156119af576119ae611455565b5b6119b982546117b0565b6119c4828285611900565b600060209050601f8311600181146119f757600084156119e5578287015190505b6119ef8582611971565b865550611a57565b601f198416611a05866117e1565b60005b82811015611a2d57848901518255600182019150602085019450602081019050611a08565b86831015611a4a5784890151611a46601f891682611953565b8355505b6001600288020188555050505b505050505050565b6000604082019050611a746000830185611421565b611a8160208301846116de565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ac282610f76565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611af457611af3611a88565b5b600182019050919050565b600082825260208201905092915050565b7f46756e6374696f6e2063616c6c6572206973206e6f7420706f6c6c206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b6c602183611aff565b9150611b7782611b10565b604082019050919050565b60006020820190508181036000830152611b9b81611b5f565b9050919050565b7f506f6c6c20646f65736e27742065786973740000000000000000000000000000600082015250565b6000611bd8601283611aff565b9150611be382611ba2565b602082019050919050565b60006020820190508181036000830152611c0781611bcb565b9050919050565b6000611c1982610f76565b9150611c2483610f76565b9250828203905081811115611c3c57611c3b611a88565b5b92915050565b7f53656c656374656420696e646578206973206f7574206f662072616e67650000600082015250565b6000611c78601e83611aff565b9150611c8382611c42565b602082019050919050565b60006020820190508181036000830152611ca781611c6b565b9050919050565b7f46756e6374696f6e2063616c6c65722068617320616c726561647920766f746560008201527f64206f6e2074686520706f6c6c00000000000000000000000000000000000000602082015250565b6000611d0a602d83611aff565b9150611d1582611cae565b604082019050919050565b60006020820190508181036000830152611d3981611cfd565b9050919050565b7f506f6c6c2068617320636c6f7365640000000000000000000000000000000000600082015250565b6000611d76600f83611aff565b9150611d8182611d40565b602082019050919050565b60006020820190508181036000830152611da581611d69565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611de682610f76565b9150611df183610f76565b9250828201905080821115611e0957611e08611a88565b5b92915050565b611e1881611708565b82525050565b6000606082019050611e336000830186611421565b611e4060208301856116de565b611e4d6040830184611e0f565b94935050505056fea26469706673582212203a3c574a3b3f7a3f57645499489463199a3ad8b755fe9d450abaa38369e306fb64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 22,
        "contract": "contracts/Polling.sol:Polling",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 25,
        "contract": "contracts/Polling.sol:Polling",
        "label": "ids",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 30,
        "contract": "contracts/Polling.sol:Polling",
        "label": "idToPoll",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(Poll)17_storage)"
      },
      {
        "astId": 35,
        "contract": "contracts/Polling.sol:Polling",
        "label": "addressToIds",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 41,
        "contract": "contracts/Polling.sol:Polling",
        "label": "addressToVoted",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
      },
      {
        "astId": 44,
        "contract": "contracts/Polling.sol:Polling",
        "label": "currentId",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(PollState)20": {
        "encoding": "inplace",
        "label": "enum Polling.PollState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bool)"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Poll)17_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Polling.Poll)",
        "numberOfBytes": "32",
        "value": "t_struct(Poll)17_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Poll)17_storage": {
        "encoding": "inplace",
        "label": "struct Polling.Poll",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/Polling.sol:Polling",
            "label": "pollOwner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 5,
            "contract": "contracts/Polling.sol:Polling",
            "label": "question",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 8,
            "contract": "contracts/Polling.sol:Polling",
            "label": "pollState",
            "offset": 0,
            "slot": "2",
            "type": "t_enum(PollState)20"
          },
          {
            "astId": 10,
            "contract": "contracts/Polling.sol:Polling",
            "label": "id",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 13,
            "contract": "contracts/Polling.sol:Polling",
            "label": "votes",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 16,
            "contract": "contracts/Polling.sol:Polling",
            "label": "options",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_string_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}