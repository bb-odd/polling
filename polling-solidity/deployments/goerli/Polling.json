{
  "address": "0x2DBC0D32bD6DCf1D079A3e8b52d0D15497b9A116",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pollId",
          "type": "uint256"
        }
      ],
      "name": "closePoll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_question",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_options",
          "type": "string[]"
        }
      ],
      "name": "createPoll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAddressPollIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pollId",
          "type": "uint256"
        }
      ],
      "name": "getAddressVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pollId",
          "type": "uint256"
        }
      ],
      "name": "getPoll",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "pollOwner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "question",
              "type": "string"
            },
            {
              "internalType": "enum Polling.PollState",
              "name": "pollState",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "votes",
              "type": "uint256[]"
            },
            {
              "internalType": "string[]",
              "name": "options",
              "type": "string[]"
            }
          ],
          "internalType": "struct Polling.Poll",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ids",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_voteIndex",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_pollId",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc93bde684a5581e9ae50a83becd61f8a5375e3e75991732fa1d261d88ba0d5be",
  "receipt": {
    "to": null,
    "from": "0xF2599F9BD96A4c3b2e6a20440BE8d23235960bfD",
    "contractAddress": "0x2DBC0D32bD6DCf1D079A3e8b52d0D15497b9A116",
    "transactionIndex": 76,
    "gasUsed": "1690524",
    "logsBloom": "0x
    "blockHash": "0x32a2c9ceea7b13fbe6bac971489fc2b8f5a3f00215793c68f40629cab15d83a4",
    "transactionHash": "0xc93bde684a5581e9ae50a83becd61f8a5375e3e75991732fa1d261d88ba0d5be",
    "logs": [],
    "blockNumber": 8062273,
    "cumulativeGasUsed": "20857071",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "9e7ab1687d2a70a79f4ca1db94f97ed6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pollId\",\"type\":\"uint256\"}],\"name\":\"closePoll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_question\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_options\",\"type\":\"string[]\"}],\"name\":\"createPoll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddressPollIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pollId\",\"type\":\"uint256\"}],\"name\":\"getAddressVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pollId\",\"type\":\"uint256\"}],\"name\":\"getPoll\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"pollOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"question\",\"type\":\"string\"},{\"internalType\":\"enum Polling.PollState\",\"name\":\"pollState\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"votes\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"options\",\"type\":\"string[]\"}],\"internalType\":\"struct Polling.Poll\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_voteIndex\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_pollId\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Polling.sol\":\"Polling\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Polling.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\n\\n// Uncomment this line to use console.log\\n// import \\\"hardhat/console.sol\\\";\\n\\ncontract Polling {\\n    /* TYPE DECLARATIONS */\\n    struct Poll {\\n        address pollOwner;\\n        string question;\\n        PollState pollState;\\n        uint256 id;\\n        uint256[] votes;\\n        string[] options;\\n    }\\n\\n    enum PollState {\\n        OPEN,\\n        CLOSED\\n    }\\n\\n    /* STATE VARIABLES */\\n    address public owner;\\n    uint256[] public ids;\\n    mapping(uint256 => Poll) idToPoll;\\n    mapping(address => uint256[]) addressToIds;\\n    mapping(address => mapping(uint256 => bool)) addressToVoted;\\n    uint256 currentId = 0;\\n\\n    modifier onlyPollOwner(uint256 _pollId) {\\n        require(\\n            idToPoll[_pollId].pollOwner == msg.sender,\\n            \\\"Function caller is not poll owner\\\"\\n        );\\n        _;\\n    }\\n\\n    constructor() public {\\n        owner = msg.sender;\\n    }\\n\\n    function createPoll(\\n        string memory _question,\\n        string[] memory _options\\n    ) external {\\n        require(_options.length > 1 && _options.length <= 4);\\n        Poll memory poll;\\n        poll.pollOwner = msg.sender;\\n        poll.id = currentId;\\n        poll.question = _question;\\n        poll.options = _options;\\n        idToPoll[currentId] = poll;\\n        addressToIds[msg.sender].push(currentId);\\n        currentId++;\\n    }\\n\\n    function vote(uint8 _voteIndex, uint256 _pollId) external {\\n        require(\\n            _voteIndex >= 0 &&\\n                _voteIndex <= idToPoll[_pollId].options.length - 1,\\n            \\\"Selected index is out of range\\\"\\n        );\\n        require(\\n            addressToVoted[msg.sender][_pollId] == false,\\n            \\\"Function caller has already voted on the poll\\\"\\n        );\\n        require(\\n            idToPoll[_pollId].pollState == PollState.OPEN,\\n            \\\"Poll has closed\\\"\\n        );\\n        require(\\n            idToPoll[_voteIndex].pollOwner != address(0),\\n            \\\"Poll doesn't exist\\\"\\n        );\\n        idToPoll[_pollId].votes[_voteIndex] += 1;\\n        addressToVoted[msg.sender][_pollId] = true;\\n    }\\n\\n    function closePoll(uint256 _pollId) external onlyPollOwner(_pollId) {\\n        require(\\n            idToPoll[_pollId].pollOwner != address(0),\\n            \\\"Poll doesn't exist\\\"\\n        );\\n        idToPoll[_pollId].pollState = PollState.CLOSED;\\n    }\\n\\n    function getPoll(uint256 _pollId) public view returns (Poll memory) {\\n        return idToPoll[_pollId];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return owner;\\n    }\\n\\n    function getIds() public view returns (uint256[] memory) {\\n        return ids;\\n    }\\n\\n    function getAddressPollIds() public view returns (uint256[] memory) {\\n        return addressToIds[msg.sender];\\n    }\\n\\n    function getAddressVoted(uint256 _pollId) public view returns (bool) {\\n        return addressToVoted[msg.sender][_pollId];\\n    }\\n\\n    function getCurrentId() public view returns (uint256) {\\n        return currentId;\\n    }\\n}\\n\",\"keccak256\":\"0x5b439df91c93c8ad00a49c8df3046b169a1ec918e064854b0e806ad131f4aa86\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x6080604052600060055534801561001557600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611d42806100656000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063893d20e811610071578063893d20e8146101665780638da5cb5b146101845780639534e637146101a2578063d3f29ace146101be578063f8fed27c146101da578063fac333ac146101f8576100a9565b8063152d534e146100ae5780631a8cbcaa146100de5780632b1056631461010e5780636c1438621461012c5780637e3d71c31461014a575b600080fd5b6100c860048036038101906100c39190610ed2565b610228565b6040516100d59190610f1a565b60405180910390f35b6100f860048036038101906100f39190610ed2565b61028f565b6040516101059190611294565b60405180910390f35b61011661051a565b6040516101239190611325565b60405180910390f35b610134610572565b6040516101419190611356565b60405180910390f35b610164600480360381019061015f919061158c565b61057c565b005b61016e610765565b60405161017b9190611613565b60405180910390f35b61018c61078e565b6040516101999190611613565b60405180910390f35b6101bc60048036038101906101b79190610ed2565b6107b2565b005b6101d860048036038101906101d39190611667565b61093f565b005b6101e2610c4a565b6040516101ef9190611325565b60405180910390f35b610212600480360381019061020d9190610ed2565b610cdf565b60405161021f9190611356565b60405180910390f35b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff169050919050565b610297610d03565b600260008381526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461031b906116d6565b80601f0160208091040260200160405190810160405280929190818152602001828054610347906116d6565b80156103945780601f1061036957610100808354040283529160200191610394565b820191906000526020600020905b81548152906001019060200180831161037757829003601f168201915b505050505081526020016002820160009054906101000a900460ff1660018111156103c2576103c1611006565b5b60018111156103d4576103d3611006565b5b8152602001600382015481526020016004820180548060200260200160405190810160405280929190818152602001828054801561043157602002820191906000526020600020905b81548152602001906001019080831161041d575b5050505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b8282101561050b57838290600052602060002001805461047e906116d6565b80601f01602080910402602001604051908101604052809291908181526020018280546104aa906116d6565b80156104f75780601f106104cc576101008083540402835291602001916104f7565b820191906000526020600020905b8154815290600101906020018083116104da57829003601f168201915b50505050508152602001906001019061045f565b50505050815250509050919050565b6060600180548060200260200160405190810160405280929190818152602001828054801561056857602002820191906000526020600020905b815481526020019060010190808311610554575b5050505050905090565b6000600554905090565b6001815111801561058f57506004815111155b61059857600080fd5b6105a0610d03565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600554816060018181525050828160200181905250818160a001819052508060026000600554815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908161066891906118b3565b5060408201518160020160006101000a81548160ff0219169083600181111561069457610693611006565b5b02179055506060820151816003015560808201518160040190805190602001906106bf929190610d61565b5060a08201518160050190805190602001906106dc929190610dae565b50905050600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060055490806001815401808255809150506001900390600052602060002001600090919091909150556005600081548092919061075b906119b4565b9190505550505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b803373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610857576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084e90611a7f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036108fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f390611aeb565b60405180910390fd5b60016002600084815260200190815260200160002060020160006101000a81548160ff0219169083600181111561093657610935611006565b5b02179055505050565b60008260ff161015801561097b5750600160026000838152602001908152602001600020600501805490506109749190611b0b565b8260ff1611155b6109ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b190611b8b565b60405180910390fd5b60001515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16151514610a5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5590611c1d565b60405180910390fd5b60006001811115610a7257610a71611006565b5b6002600083815260200190815260200160002060020160009054906101000a900460ff166001811115610aa857610aa7611006565b5b14610ae8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610adf90611c89565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008460ff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610b90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8790611aeb565b60405180910390fd5b6001600260008381526020019081526020016000206004018360ff1681548110610bbd57610bbc611ca9565b5b906000526020600020016000828254610bd69190611cd8565b925050819055506001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6060600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610cd557602002820191906000526020600020905b815481526020019060010190808311610cc1575b5050505050905090565b60018181548110610cef57600080fd5b906000526020600020016000915090505481565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160006001811115610d4657610d45611006565b5b81526020016000815260200160608152602001606081525090565b828054828255906000526020600020908101928215610d9d579160200282015b82811115610d9c578251825591602001919060010190610d81565b5b509050610daa9190610e07565b5090565b828054828255906000526020600020908101928215610df6579160200282015b82811115610df5578251829081610de591906118b3565b5091602001919060010190610dce565b5b509050610e039190610e24565b5090565b5b80821115610e20576000816000905550600101610e08565b5090565b5b80821115610e445760008181610e3b9190610e48565b50600101610e25565b5090565b508054610e54906116d6565b6000825580601f10610e665750610e85565b601f016020900490600052602060002090810190610e849190610e07565b5b50565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610eaf81610e9c565b8114610eba57600080fd5b50565b600081359050610ecc81610ea6565b92915050565b600060208284031215610ee857610ee7610e92565b5b6000610ef684828501610ebd565b91505092915050565b60008115159050919050565b610f1481610eff565b82525050565b6000602082019050610f2f6000830184610f0b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f6082610f35565b9050919050565b610f7081610f55565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fb0578082015181840152602081019050610f95565b60008484015250505050565b6000601f19601f8301169050919050565b6000610fd882610f76565b610fe28185610f81565b9350610ff2818560208601610f92565b610ffb81610fbc565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061104657611045611006565b5b50565b600081905061105782611035565b919050565b600061106782611049565b9050919050565b6110778161105c565b82525050565b61108681610e9c565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006110c4838361107d565b60208301905092915050565b6000602082019050919050565b60006110e88261108c565b6110f28185611097565b93506110fd836110a8565b8060005b8381101561112e57815161111588826110b8565b9750611120836110d0565b925050600181019050611101565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006111738383610fcd565b905092915050565b6000602082019050919050565b60006111938261113b565b61119d8185611146565b9350836020820285016111af85611157565b8060005b858110156111eb57848403895281516111cc8582611167565b94506111d78361117b565b925060208a019950506001810190506111b3565b50829750879550505050505092915050565b600060c0830160008301516112156000860182610f67565b506020830151848203602086015261122d8282610fcd565b9150506040830151611242604086018261106e565b506060830151611255606086018261107d565b506080830151848203608086015261126d82826110dd565b91505060a083015184820360a08601526112878282611188565b9150508091505092915050565b600060208201905081810360008301526112ae81846111fd565b905092915050565b600082825260208201905092915050565b60006112d28261108c565b6112dc81856112b6565b93506112e7836110a8565b8060005b838110156113185781516112ff88826110b8565b975061130a836110d0565b9250506001810190506112eb565b5085935050505092915050565b6000602082019050818103600083015261133f81846112c7565b905092915050565b61135081610e9c565b82525050565b600060208201905061136b6000830184611347565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6113b382610fbc565b810181811067ffffffffffffffff821117156113d2576113d161137b565b5b80604052505050565b60006113e5610e88565b90506113f182826113aa565b919050565b600067ffffffffffffffff8211156114115761141061137b565b5b61141a82610fbc565b9050602081019050919050565b82818337600083830152505050565b6000611449611444846113f6565b6113db565b90508281526020810184848401111561146557611464611376565b5b611470848285611427565b509392505050565b600082601f83011261148d5761148c611371565b5b813561149d848260208601611436565b91505092915050565b600067ffffffffffffffff8211156114c1576114c061137b565b5b602082029050602081019050919050565b600080fd5b60006114ea6114e5846114a6565b6113db565b9050808382526020820190506020840283018581111561150d5761150c6114d2565b5b835b8181101561155457803567ffffffffffffffff81111561153257611531611371565b5b80860161153f8982611478565b8552602085019450505060208101905061150f565b5050509392505050565b600082601f83011261157357611572611371565b5b81356115838482602086016114d7565b91505092915050565b600080604083850312156115a3576115a2610e92565b5b600083013567ffffffffffffffff8111156115c1576115c0610e97565b5b6115cd85828601611478565b925050602083013567ffffffffffffffff8111156115ee576115ed610e97565b5b6115fa8582860161155e565b9150509250929050565b61160d81610f55565b82525050565b60006020820190506116286000830184611604565b92915050565b600060ff82169050919050565b6116448161162e565b811461164f57600080fd5b50565b6000813590506116618161163b565b92915050565b6000806040838503121561167e5761167d610e92565b5b600061168c85828601611652565b925050602061169d85828601610ebd565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806116ee57607f821691505b602082108103611701576117006116a7565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026117697fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261172c565b611773868361172c565b95508019841693508086168417925050509392505050565b6000819050919050565b60006117b06117ab6117a684610e9c565b61178b565b610e9c565b9050919050565b6000819050919050565b6117ca83611795565b6117de6117d6826117b7565b848454611739565b825550505050565b600090565b6117f36117e6565b6117fe8184846117c1565b505050565b5b81811015611822576118176000826117eb565b600181019050611804565b5050565b601f8211156118675761183881611707565b6118418461171c565b81016020851015611850578190505b61186461185c8561171c565b830182611803565b50505b505050565b600082821c905092915050565b600061188a6000198460080261186c565b1980831691505092915050565b60006118a38383611879565b9150826002028217905092915050565b6118bc82610f76565b67ffffffffffffffff8111156118d5576118d461137b565b5b6118df82546116d6565b6118ea828285611826565b600060209050601f83116001811461191d576000841561190b578287015190505b6119158582611897565b86555061197d565b601f19841661192b86611707565b60005b828110156119535784890151825560018201915060208501945060208101905061192e565b86831015611970578489015161196c601f891682611879565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119bf82610e9c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036119f1576119f0611985565b5b600182019050919050565b600082825260208201905092915050565b7f46756e6374696f6e2063616c6c6572206973206e6f7420706f6c6c206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611a696021836119fc565b9150611a7482611a0d565b604082019050919050565b60006020820190508181036000830152611a9881611a5c565b9050919050565b7f506f6c6c20646f65736e27742065786973740000000000000000000000000000600082015250565b6000611ad56012836119fc565b9150611ae082611a9f565b602082019050919050565b60006020820190508181036000830152611b0481611ac8565b9050919050565b6000611b1682610e9c565b9150611b2183610e9c565b9250828203905081811115611b3957611b38611985565b5b92915050565b7f53656c656374656420696e646578206973206f7574206f662072616e67650000600082015250565b6000611b75601e836119fc565b9150611b8082611b3f565b602082019050919050565b60006020820190508181036000830152611ba481611b68565b9050919050565b7f46756e6374696f6e2063616c6c65722068617320616c726561647920766f746560008201527f64206f6e2074686520706f6c6c00000000000000000000000000000000000000602082015250565b6000611c07602d836119fc565b9150611c1282611bab565b604082019050919050565b60006020820190508181036000830152611c3681611bfa565b9050919050565b7f506f6c6c2068617320636c6f7365640000000000000000000000000000000000600082015250565b6000611c73600f836119fc565b9150611c7e82611c3d565b602082019050919050565b60006020820190508181036000830152611ca281611c66565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611ce382610e9c565b9150611cee83610e9c565b9250828201905080821115611d0657611d05611985565b5b9291505056fea264697066735822122079e59d9a4a4e664635df05c9bc25987db02181fb7d7eae267752472630af4e2d64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063893d20e811610071578063893d20e8146101665780638da5cb5b146101845780639534e637146101a2578063d3f29ace146101be578063f8fed27c146101da578063fac333ac146101f8576100a9565b8063152d534e146100ae5780631a8cbcaa146100de5780632b1056631461010e5780636c1438621461012c5780637e3d71c31461014a575b600080fd5b6100c860048036038101906100c39190610ed2565b610228565b6040516100d59190610f1a565b60405180910390f35b6100f860048036038101906100f39190610ed2565b61028f565b6040516101059190611294565b60405180910390f35b61011661051a565b6040516101239190611325565b60405180910390f35b610134610572565b6040516101419190611356565b60405180910390f35b610164600480360381019061015f919061158c565b61057c565b005b61016e610765565b60405161017b9190611613565b60405180910390f35b61018c61078e565b6040516101999190611613565b60405180910390f35b6101bc60048036038101906101b79190610ed2565b6107b2565b005b6101d860048036038101906101d39190611667565b61093f565b005b6101e2610c4a565b6040516101ef9190611325565b60405180910390f35b610212600480360381019061020d9190610ed2565b610cdf565b60405161021f9190611356565b60405180910390f35b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff169050919050565b610297610d03565b600260008381526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461031b906116d6565b80601f0160208091040260200160405190810160405280929190818152602001828054610347906116d6565b80156103945780601f1061036957610100808354040283529160200191610394565b820191906000526020600020905b81548152906001019060200180831161037757829003601f168201915b505050505081526020016002820160009054906101000a900460ff1660018111156103c2576103c1611006565b5b60018111156103d4576103d3611006565b5b8152602001600382015481526020016004820180548060200260200160405190810160405280929190818152602001828054801561043157602002820191906000526020600020905b81548152602001906001019080831161041d575b5050505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b8282101561050b57838290600052602060002001805461047e906116d6565b80601f01602080910402602001604051908101604052809291908181526020018280546104aa906116d6565b80156104f75780601f106104cc576101008083540402835291602001916104f7565b820191906000526020600020905b8154815290600101906020018083116104da57829003601f168201915b50505050508152602001906001019061045f565b50505050815250509050919050565b6060600180548060200260200160405190810160405280929190818152602001828054801561056857602002820191906000526020600020905b815481526020019060010190808311610554575b5050505050905090565b6000600554905090565b6001815111801561058f57506004815111155b61059857600080fd5b6105a0610d03565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600554816060018181525050828160200181905250818160a001819052508060026000600554815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908161066891906118b3565b5060408201518160020160006101000a81548160ff0219169083600181111561069457610693611006565b5b02179055506060820151816003015560808201518160040190805190602001906106bf929190610d61565b5060a08201518160050190805190602001906106dc929190610dae565b50905050600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060055490806001815401808255809150506001900390600052602060002001600090919091909150556005600081548092919061075b906119b4565b9190505550505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b803373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610857576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084e90611a7f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036108fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f390611aeb565b60405180910390fd5b60016002600084815260200190815260200160002060020160006101000a81548160ff0219169083600181111561093657610935611006565b5b02179055505050565b60008260ff161015801561097b5750600160026000838152602001908152602001600020600501805490506109749190611b0b565b8260ff1611155b6109ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b190611b8b565b60405180910390fd5b60001515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16151514610a5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5590611c1d565b60405180910390fd5b60006001811115610a7257610a71611006565b5b6002600083815260200190815260200160002060020160009054906101000a900460ff166001811115610aa857610aa7611006565b5b14610ae8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610adf90611c89565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008460ff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610b90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8790611aeb565b60405180910390fd5b6001600260008381526020019081526020016000206004018360ff1681548110610bbd57610bbc611ca9565b5b906000526020600020016000828254610bd69190611cd8565b925050819055506001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6060600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610cd557602002820191906000526020600020905b815481526020019060010190808311610cc1575b5050505050905090565b60018181548110610cef57600080fd5b906000526020600020016000915090505481565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160006001811115610d4657610d45611006565b5b81526020016000815260200160608152602001606081525090565b828054828255906000526020600020908101928215610d9d579160200282015b82811115610d9c578251825591602001919060010190610d81565b5b509050610daa9190610e07565b5090565b828054828255906000526020600020908101928215610df6579160200282015b82811115610df5578251829081610de591906118b3565b5091602001919060010190610dce565b5b509050610e039190610e24565b5090565b5b80821115610e20576000816000905550600101610e08565b5090565b5b80821115610e445760008181610e3b9190610e48565b50600101610e25565b5090565b508054610e54906116d6565b6000825580601f10610e665750610e85565b601f016020900490600052602060002090810190610e849190610e07565b5b50565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610eaf81610e9c565b8114610eba57600080fd5b50565b600081359050610ecc81610ea6565b92915050565b600060208284031215610ee857610ee7610e92565b5b6000610ef684828501610ebd565b91505092915050565b60008115159050919050565b610f1481610eff565b82525050565b6000602082019050610f2f6000830184610f0b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f6082610f35565b9050919050565b610f7081610f55565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fb0578082015181840152602081019050610f95565b60008484015250505050565b6000601f19601f8301169050919050565b6000610fd882610f76565b610fe28185610f81565b9350610ff2818560208601610f92565b610ffb81610fbc565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061104657611045611006565b5b50565b600081905061105782611035565b919050565b600061106782611049565b9050919050565b6110778161105c565b82525050565b61108681610e9c565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006110c4838361107d565b60208301905092915050565b6000602082019050919050565b60006110e88261108c565b6110f28185611097565b93506110fd836110a8565b8060005b8381101561112e57815161111588826110b8565b9750611120836110d0565b925050600181019050611101565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006111738383610fcd565b905092915050565b6000602082019050919050565b60006111938261113b565b61119d8185611146565b9350836020820285016111af85611157565b8060005b858110156111eb57848403895281516111cc8582611167565b94506111d78361117b565b925060208a019950506001810190506111b3565b50829750879550505050505092915050565b600060c0830160008301516112156000860182610f67565b506020830151848203602086015261122d8282610fcd565b9150506040830151611242604086018261106e565b506060830151611255606086018261107d565b506080830151848203608086015261126d82826110dd565b91505060a083015184820360a08601526112878282611188565b9150508091505092915050565b600060208201905081810360008301526112ae81846111fd565b905092915050565b600082825260208201905092915050565b60006112d28261108c565b6112dc81856112b6565b93506112e7836110a8565b8060005b838110156113185781516112ff88826110b8565b975061130a836110d0565b9250506001810190506112eb565b5085935050505092915050565b6000602082019050818103600083015261133f81846112c7565b905092915050565b61135081610e9c565b82525050565b600060208201905061136b6000830184611347565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6113b382610fbc565b810181811067ffffffffffffffff821117156113d2576113d161137b565b5b80604052505050565b60006113e5610e88565b90506113f182826113aa565b919050565b600067ffffffffffffffff8211156114115761141061137b565b5b61141a82610fbc565b9050602081019050919050565b82818337600083830152505050565b6000611449611444846113f6565b6113db565b90508281526020810184848401111561146557611464611376565b5b611470848285611427565b509392505050565b600082601f83011261148d5761148c611371565b5b813561149d848260208601611436565b91505092915050565b600067ffffffffffffffff8211156114c1576114c061137b565b5b602082029050602081019050919050565b600080fd5b60006114ea6114e5846114a6565b6113db565b9050808382526020820190506020840283018581111561150d5761150c6114d2565b5b835b8181101561155457803567ffffffffffffffff81111561153257611531611371565b5b80860161153f8982611478565b8552602085019450505060208101905061150f565b5050509392505050565b600082601f83011261157357611572611371565b5b81356115838482602086016114d7565b91505092915050565b600080604083850312156115a3576115a2610e92565b5b600083013567ffffffffffffffff8111156115c1576115c0610e97565b5b6115cd85828601611478565b925050602083013567ffffffffffffffff8111156115ee576115ed610e97565b5b6115fa8582860161155e565b9150509250929050565b61160d81610f55565b82525050565b60006020820190506116286000830184611604565b92915050565b600060ff82169050919050565b6116448161162e565b811461164f57600080fd5b50565b6000813590506116618161163b565b92915050565b6000806040838503121561167e5761167d610e92565b5b600061168c85828601611652565b925050602061169d85828601610ebd565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806116ee57607f821691505b602082108103611701576117006116a7565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026117697fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261172c565b611773868361172c565b95508019841693508086168417925050509392505050565b6000819050919050565b60006117b06117ab6117a684610e9c565b61178b565b610e9c565b9050919050565b6000819050919050565b6117ca83611795565b6117de6117d6826117b7565b848454611739565b825550505050565b600090565b6117f36117e6565b6117fe8184846117c1565b505050565b5b81811015611822576118176000826117eb565b600181019050611804565b5050565b601f8211156118675761183881611707565b6118418461171c565b81016020851015611850578190505b61186461185c8561171c565b830182611803565b50505b505050565b600082821c905092915050565b600061188a6000198460080261186c565b1980831691505092915050565b60006118a38383611879565b9150826002028217905092915050565b6118bc82610f76565b67ffffffffffffffff8111156118d5576118d461137b565b5b6118df82546116d6565b6118ea828285611826565b600060209050601f83116001811461191d576000841561190b578287015190505b6119158582611897565b86555061197d565b601f19841661192b86611707565b60005b828110156119535784890151825560018201915060208501945060208101905061192e565b86831015611970578489015161196c601f891682611879565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119bf82610e9c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036119f1576119f0611985565b5b600182019050919050565b600082825260208201905092915050565b7f46756e6374696f6e2063616c6c6572206973206e6f7420706f6c6c206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611a696021836119fc565b9150611a7482611a0d565b604082019050919050565b60006020820190508181036000830152611a9881611a5c565b9050919050565b7f506f6c6c20646f65736e27742065786973740000000000000000000000000000600082015250565b6000611ad56012836119fc565b9150611ae082611a9f565b602082019050919050565b60006020820190508181036000830152611b0481611ac8565b9050919050565b6000611b1682610e9c565b9150611b2183610e9c565b9250828203905081811115611b3957611b38611985565b5b92915050565b7f53656c656374656420696e646578206973206f7574206f662072616e67650000600082015250565b6000611b75601e836119fc565b9150611b8082611b3f565b602082019050919050565b60006020820190508181036000830152611ba481611b68565b9050919050565b7f46756e6374696f6e2063616c6c65722068617320616c726561647920766f746560008201527f64206f6e2074686520706f6c6c00000000000000000000000000000000000000602082015250565b6000611c07602d836119fc565b9150611c1282611bab565b604082019050919050565b60006020820190508181036000830152611c3681611bfa565b9050919050565b7f506f6c6c2068617320636c6f7365640000000000000000000000000000000000600082015250565b6000611c73600f836119fc565b9150611c7e82611c3d565b602082019050919050565b60006020820190508181036000830152611ca281611c66565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611ce382610e9c565b9150611cee83610e9c565b9250828201905080821115611d0657611d05611985565b5b9291505056fea264697066735822122079e59d9a4a4e664635df05c9bc25987db02181fb7d7eae267752472630af4e2d64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 22,
        "contract": "contracts/Polling.sol:Polling",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 25,
        "contract": "contracts/Polling.sol:Polling",
        "label": "ids",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 30,
        "contract": "contracts/Polling.sol:Polling",
        "label": "idToPoll",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(Poll)17_storage)"
      },
      {
        "astId": 35,
        "contract": "contracts/Polling.sol:Polling",
        "label": "addressToIds",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 41,
        "contract": "contracts/Polling.sol:Polling",
        "label": "addressToVoted",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
      },
      {
        "astId": 44,
        "contract": "contracts/Polling.sol:Polling",
        "label": "currentId",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(PollState)20": {
        "encoding": "inplace",
        "label": "enum Polling.PollState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bool)"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Poll)17_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Polling.Poll)",
        "numberOfBytes": "32",
        "value": "t_struct(Poll)17_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Poll)17_storage": {
        "encoding": "inplace",
        "label": "struct Polling.Poll",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/Polling.sol:Polling",
            "label": "pollOwner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 5,
            "contract": "contracts/Polling.sol:Polling",
            "label": "question",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 8,
            "contract": "contracts/Polling.sol:Polling",
            "label": "pollState",
            "offset": 0,
            "slot": "2",
            "type": "t_enum(PollState)20"
          },
          {
            "astId": 10,
            "contract": "contracts/Polling.sol:Polling",
            "label": "id",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 13,
            "contract": "contracts/Polling.sol:Polling",
            "label": "votes",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 16,
            "contract": "contracts/Polling.sol:Polling",
            "label": "options",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_string_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}