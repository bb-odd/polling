{
  "address": "0x1C273E795C7638814894b77b3a9258e499645eeb",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "PollClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "PollCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "voteIndex",
          "type": "uint8"
        }
      ],
      "name": "Voted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pollId",
          "type": "uint256"
        }
      ],
      "name": "closePoll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_question",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_options",
          "type": "string[]"
        }
      ],
      "name": "createPoll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAddressPollIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pollId",
          "type": "uint256"
        }
      ],
      "name": "getAddressVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pollId",
          "type": "uint256"
        }
      ],
      "name": "getPoll",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "pollOwner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "question",
              "type": "string"
            },
            {
              "internalType": "enum Polling.PollState",
              "name": "pollState",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256[4]",
              "name": "votes",
              "type": "uint256[4]"
            },
            {
              "internalType": "string[]",
              "name": "options",
              "type": "string[]"
            }
          ],
          "internalType": "struct Polling.Poll",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ids",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_voteIndex",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_pollId",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x118dc8b634e65aaca9b7fa80dd837c7388d1edb3beb42f8c340350b0df31d9c0",
  "receipt": {
    "to": null,
    "from": "0xF2599F9BD96A4c3b2e6a20440BE8d23235960bfD",
    "contractAddress": "0x1C273E795C7638814894b77b3a9258e499645eeb",
    "transactionIndex": 34,
    "gasUsed": "1763734",
    "logsBloom": "0x
    "blockHash": "0x556f667ef952bfab27d019a6a89b369908ef6826c656cdc48a94a69d72aba0b6",
    "transactionHash": "0x118dc8b634e65aaca9b7fa80dd837c7388d1edb3beb42f8c340350b0df31d9c0",
    "logs": [],
    "blockNumber": 8087707,
    "cumulativeGasUsed": "7893121",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 4,
  "solcInputHash": "ea2b8c2b183700a3f08985b59ca238bf",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"PollClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"PollCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"voteIndex\",\"type\":\"uint8\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pollId\",\"type\":\"uint256\"}],\"name\":\"closePoll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_question\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_options\",\"type\":\"string[]\"}],\"name\":\"createPoll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddressPollIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pollId\",\"type\":\"uint256\"}],\"name\":\"getAddressVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pollId\",\"type\":\"uint256\"}],\"name\":\"getPoll\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"pollOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"question\",\"type\":\"string\"},{\"internalType\":\"enum Polling.PollState\",\"name\":\"pollState\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256[4]\",\"name\":\"votes\",\"type\":\"uint256[4]\"},{\"internalType\":\"string[]\",\"name\":\"options\",\"type\":\"string[]\"}],\"internalType\":\"struct Polling.Poll\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_voteIndex\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_pollId\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Polling.sol\":\"Polling\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Polling.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\n\\n// Uncomment this line to use console.log\\n// import \\\"hardhat/console.sol\\\";\\n\\ncontract Polling {\\n    /* TYPE DECLARATIONS */\\n    struct Poll {\\n        address pollOwner;\\n        string question;\\n        PollState pollState;\\n        uint256 id;\\n        uint256[4] votes;\\n        string[] options;\\n    }\\n\\n    enum PollState {\\n        OPEN,\\n        CLOSED\\n    }\\n\\n    /* STATE VARIABLES */\\n    address public owner;\\n    uint256[] public ids;\\n    mapping(uint256 => Poll) idToPoll;\\n    mapping(address => uint256[]) addressToIds;\\n    mapping(address => mapping(uint256 => bool)) addressToVoted;\\n    uint256 currentId = 0;\\n\\n    modifier onlyPollOwner(uint256 _pollId) {\\n        require(\\n            idToPoll[_pollId].pollOwner == msg.sender,\\n            \\\"Function caller is not poll owner\\\"\\n        );\\n        _;\\n    }\\n\\n    /* EVENTS */\\n    event PollCreated(uint256 id, address owner);\\n    event Voted(uint256 id, address voter, uint8 voteIndex);\\n    event PollClosed(uint256 id, address owner);\\n\\n    constructor() public {\\n        owner = msg.sender;\\n    }\\n\\n    function createPoll(\\n        string memory _question,\\n        string[] memory _options\\n    ) external {\\n        require(_options.length > 1 && _options.length <= 4);\\n        Poll memory poll;\\n        poll.pollOwner = msg.sender;\\n        poll.id = currentId;\\n        poll.question = _question;\\n        poll.options = _options;\\n        idToPoll[currentId] = poll;\\n        addressToIds[msg.sender].push(currentId);\\n        ids.push(currentId);\\n        emit PollCreated(currentId, msg.sender);\\n        currentId++;\\n    }\\n\\n    function vote(uint8 _voteIndex, uint256 _pollId) external {\\n        require(\\n            _voteIndex >= 0 &&\\n                _voteIndex <= idToPoll[_pollId].options.length - 1,\\n            \\\"Selected index is out of range\\\"\\n        );\\n        require(\\n            addressToVoted[msg.sender][_pollId] == false,\\n            \\\"Function caller has already voted on the poll\\\"\\n        );\\n        require(\\n            idToPoll[_pollId].pollState == PollState.OPEN,\\n            \\\"Poll has closed\\\"\\n        );\\n        require(\\n            idToPoll[_voteIndex].pollOwner != address(0),\\n            \\\"Poll doesn't exist\\\"\\n        );\\n        idToPoll[_pollId].votes[_voteIndex] += 1;\\n        addressToVoted[msg.sender][_pollId] = true;\\n        emit Voted(_pollId, msg.sender, _voteIndex);\\n    }\\n\\n    function closePoll(uint256 _pollId) external onlyPollOwner(_pollId) {\\n        require(\\n            idToPoll[_pollId].pollOwner != address(0),\\n            \\\"Poll doesn't exist\\\"\\n        );\\n        idToPoll[_pollId].pollState = PollState.CLOSED;\\n        emit PollClosed(_pollId, msg.sender);\\n    }\\n\\n    function getPoll(uint256 _pollId) public view returns (Poll memory) {\\n        return idToPoll[_pollId];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return owner;\\n    }\\n\\n    function getIds() public view returns (uint256[] memory) {\\n        return ids;\\n    }\\n\\n    function getAddressPollIds() public view returns (uint256[] memory) {\\n        return addressToIds[msg.sender];\\n    }\\n\\n    function getAddressVoted(uint256 _pollId) public view returns (bool) {\\n        return addressToVoted[msg.sender][_pollId];\\n    }\\n\\n    function getCurrentId() public view returns (uint256) {\\n        return currentId;\\n    }\\n}\\n\",\"keccak256\":\"0xc85fbd5a753aaed3856a5302aa8976d57b28866a4a5a309744f3ca96dab3ef94\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x6080604052600060055534801561001557600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611e95806100656000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063893d20e811610071578063893d20e8146101665780638da5cb5b146101845780639534e637146101a2578063d3f29ace146101be578063f8fed27c146101da578063fac333ac146101f8576100a9565b8063152d534e146100ae5780631a8cbcaa146100de5780632b1056631461010e5780636c1438621461012c5780637e3d71c31461014a575b600080fd5b6100c860048036038101906100c39190610fa6565b610228565b6040516100d59190610fee565b60405180910390f35b6100f860048036038101906100f39190610fa6565b61028f565b6040516101059190611350565b60405180910390f35b610116610507565b6040516101239190611409565b60405180910390f35b61013461055f565b604051610141919061143a565b60405180910390f35b610164600480360381019061015f9190611670565b610569565b005b61016e6107b3565b60405161017b91906116f7565b60405180910390f35b61018c6107dc565b60405161019991906116f7565b60405180910390f35b6101bc60048036038101906101b79190610fa6565b610800565b005b6101d860048036038101906101d3919061174b565b6109c6565b005b6101e2610d03565b6040516101ef9190611409565b60405180910390f35b610212600480360381019061020d9190610fa6565b610d98565b60405161021f919061143a565b60405180910390f35b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff169050919050565b610297610dbc565b600260008381526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461031b906117ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610347906117ba565b80156103945780601f1061036957610100808354040283529160200191610394565b820191906000526020600020905b81548152906001019060200180831161037757829003601f168201915b505050505081526020016002820160009054906101000a900460ff1660018111156103c2576103c16110da565b5b60018111156103d4576103d36110da565b5b8152602001600382015481526020016004820160048060200260405190810160405280929190826004801561041e576020028201915b81548152602001906001019080831161040a575b5050505050815260200160088201805480602002602001604051908101604052809291908181526020016000905b828210156104f857838290600052602060002001805461046b906117ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610497906117ba565b80156104e45780601f106104b9576101008083540402835291602001916104e4565b820191906000526020600020905b8154815290600101906020018083116104c757829003601f168201915b50505050508152602001906001019061044c565b50505050815250509050919050565b6060600180548060200260200160405190810160405280929190818152602001828054801561055557602002820191906000526020600020905b815481526020019060010190808311610541575b5050505050905090565b6000600554905090565b6001815111801561057c57506004815111155b61058557600080fd5b61058d610dbc565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600554816060018181525050828160200181905250818160a001819052508060026000600554815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816106559190611997565b5060408201518160020160006101000a81548160ff02191690836001811115610681576106806110da565b5b0217905550606082015181600301556080820151816004019060046106a7929190610e20565b5060a08201518160080190805190602001906106c4929190610e60565b50905050600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005549080600181540180825580915050600190039060005260206000200160009091909190915055600160055490806001815401808255809150506001900390600052602060002001600090919091909150557fb447d309fd3b1a27466cdb08ccc02ee5188e9c71fc58af042bafe3e0bb4512306005543360405161078e929190611a69565b60405180910390a1600560008154809291906107a990611ac1565b9190505550505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b803373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089c90611b8c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361094a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094190611bf8565b60405180910390fd5b60016002600084815260200190815260200160002060020160006101000a81548160ff02191690836001811115610984576109836110da565b5b02179055507f5f9f4b9200056c29dcdf9532acb77e0d5368e9f85580b6e1aeff24c36bddea2b82336040516109ba929190611a69565b60405180910390a15050565b60008260ff1610158015610a025750600160026000838152602001908152602001600020600801805490506109fb9190611c18565b8260ff1611155b610a41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3890611c98565b60405180910390fd5b60001515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16151514610ae5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610adc90611d2a565b60405180910390fd5b60006001811115610af957610af86110da565b5b6002600083815260200190815260200160002060020160009054906101000a900460ff166001811115610b2f57610b2e6110da565b5b14610b6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6690611d96565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008460ff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610c17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0e90611bf8565b60405180910390fd5b6001600260008381526020019081526020016000206004018360ff1660048110610c4457610c43611db6565b5b016000828254610c549190611de5565b925050819055506001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055507f094f80829c509370abb2d421a078ba5926755d3de25d021dacf7bbd19853f7a2813384604051610cf793929190611e28565b60405180910390a15050565b6060600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610d8e57602002820191906000526020600020905b815481526020019060010190808311610d7a575b5050505050905090565b60018181548110610da857600080fd5b906000526020600020016000915090505481565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160006001811115610dff57610dfe6110da565b5b815260200160008152602001610e13610eb9565b8152602001606081525090565b8260048101928215610e4f579160200282015b82811115610e4e578251825591602001919060010190610e33565b5b509050610e5c9190610edb565b5090565b828054828255906000526020600020908101928215610ea8579160200282015b82811115610ea7578251829081610e979190611997565b5091602001919060010190610e80565b5b509050610eb59190610ef8565b5090565b6040518060800160405280600490602082028036833780820191505090505090565b5b80821115610ef4576000816000905550600101610edc565b5090565b5b80821115610f185760008181610f0f9190610f1c565b50600101610ef9565b5090565b508054610f28906117ba565b6000825580601f10610f3a5750610f59565b601f016020900490600052602060002090810190610f589190610edb565b5b50565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610f8381610f70565b8114610f8e57600080fd5b50565b600081359050610fa081610f7a565b92915050565b600060208284031215610fbc57610fbb610f66565b5b6000610fca84828501610f91565b91505092915050565b60008115159050919050565b610fe881610fd3565b82525050565b60006020820190506110036000830184610fdf565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061103482611009565b9050919050565b61104481611029565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611084578082015181840152602081019050611069565b60008484015250505050565b6000601f19601f8301169050919050565b60006110ac8261104a565b6110b68185611055565b93506110c6818560208601611066565b6110cf81611090565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061111a576111196110da565b5b50565b600081905061112b82611109565b919050565b600061113b8261111d565b9050919050565b61114b81611130565b82525050565b61115a81610f70565b82525050565b600060049050919050565b600081905092915050565b6000819050919050565b600061118c8383611151565b60208301905092915050565b6000602082019050919050565b6111ae81611160565b6111b8818461116b565b92506111c382611176565b8060005b838110156111f45781516111db8782611180565b96506111e683611198565b9250506001810190506111c7565b505050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061123483836110a1565b905092915050565b6000602082019050919050565b6000611254826111fc565b61125e8185611207565b93508360208202850161127085611218565b8060005b858110156112ac578484038952815161128d8582611228565b94506112988361123c565b925060208a01995050600181019050611274565b50829750879550505050505092915050565b6000610120830160008301516112d7600086018261103b565b50602083015184820360208601526112ef82826110a1565b91505060408301516113046040860182611142565b5060608301516113176060860182611151565b50608083015161132a60808601826111a5565b5060a08301518482036101008601526113438282611249565b9150508091505092915050565b6000602082019050818103600083015261136a81846112be565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000602082019050919050565b60006113b682611372565b6113c0818561137d565b93506113cb8361138e565b8060005b838110156113fc5781516113e38882611180565b97506113ee8361139e565b9250506001810190506113cf565b5085935050505092915050565b6000602082019050818103600083015261142381846113ab565b905092915050565b61143481610f70565b82525050565b600060208201905061144f600083018461142b565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61149782611090565b810181811067ffffffffffffffff821117156114b6576114b561145f565b5b80604052505050565b60006114c9610f5c565b90506114d5828261148e565b919050565b600067ffffffffffffffff8211156114f5576114f461145f565b5b6114fe82611090565b9050602081019050919050565b82818337600083830152505050565b600061152d611528846114da565b6114bf565b9050828152602081018484840111156115495761154861145a565b5b61155484828561150b565b509392505050565b600082601f83011261157157611570611455565b5b813561158184826020860161151a565b91505092915050565b600067ffffffffffffffff8211156115a5576115a461145f565b5b602082029050602081019050919050565b600080fd5b60006115ce6115c98461158a565b6114bf565b905080838252602082019050602084028301858111156115f1576115f06115b6565b5b835b8181101561163857803567ffffffffffffffff81111561161657611615611455565b5b808601611623898261155c565b855260208501945050506020810190506115f3565b5050509392505050565b600082601f83011261165757611656611455565b5b81356116678482602086016115bb565b91505092915050565b6000806040838503121561168757611686610f66565b5b600083013567ffffffffffffffff8111156116a5576116a4610f6b565b5b6116b18582860161155c565b925050602083013567ffffffffffffffff8111156116d2576116d1610f6b565b5b6116de85828601611642565b9150509250929050565b6116f181611029565b82525050565b600060208201905061170c60008301846116e8565b92915050565b600060ff82169050919050565b61172881611712565b811461173357600080fd5b50565b6000813590506117458161171f565b92915050565b6000806040838503121561176257611761610f66565b5b600061177085828601611736565b925050602061178185828601610f91565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806117d257607f821691505b6020821081036117e5576117e461178b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261184d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611810565b6118578683611810565b95508019841693508086168417925050509392505050565b6000819050919050565b600061189461188f61188a84610f70565b61186f565b610f70565b9050919050565b6000819050919050565b6118ae83611879565b6118c26118ba8261189b565b84845461181d565b825550505050565b600090565b6118d76118ca565b6118e28184846118a5565b505050565b5b81811015611906576118fb6000826118cf565b6001810190506118e8565b5050565b601f82111561194b5761191c816117eb565b61192584611800565b81016020851015611934578190505b61194861194085611800565b8301826118e7565b50505b505050565b600082821c905092915050565b600061196e60001984600802611950565b1980831691505092915050565b6000611987838361195d565b9150826002028217905092915050565b6119a08261104a565b67ffffffffffffffff8111156119b9576119b861145f565b5b6119c382546117ba565b6119ce82828561190a565b600060209050601f831160018114611a0157600084156119ef578287015190505b6119f9858261197b565b865550611a61565b601f198416611a0f866117eb565b60005b82811015611a3757848901518255600182019150602085019450602081019050611a12565b86831015611a545784890151611a50601f89168261195d565b8355505b6001600288020188555050505b505050505050565b6000604082019050611a7e600083018561142b565b611a8b60208301846116e8565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611acc82610f70565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611afe57611afd611a92565b5b600182019050919050565b600082825260208201905092915050565b7f46756e6374696f6e2063616c6c6572206973206e6f7420706f6c6c206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b76602183611b09565b9150611b8182611b1a565b604082019050919050565b60006020820190508181036000830152611ba581611b69565b9050919050565b7f506f6c6c20646f65736e27742065786973740000000000000000000000000000600082015250565b6000611be2601283611b09565b9150611bed82611bac565b602082019050919050565b60006020820190508181036000830152611c1181611bd5565b9050919050565b6000611c2382610f70565b9150611c2e83610f70565b9250828203905081811115611c4657611c45611a92565b5b92915050565b7f53656c656374656420696e646578206973206f7574206f662072616e67650000600082015250565b6000611c82601e83611b09565b9150611c8d82611c4c565b602082019050919050565b60006020820190508181036000830152611cb181611c75565b9050919050565b7f46756e6374696f6e2063616c6c65722068617320616c726561647920766f746560008201527f64206f6e2074686520706f6c6c00000000000000000000000000000000000000602082015250565b6000611d14602d83611b09565b9150611d1f82611cb8565b604082019050919050565b60006020820190508181036000830152611d4381611d07565b9050919050565b7f506f6c6c2068617320636c6f7365640000000000000000000000000000000000600082015250565b6000611d80600f83611b09565b9150611d8b82611d4a565b602082019050919050565b60006020820190508181036000830152611daf81611d73565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611df082610f70565b9150611dfb83610f70565b9250828201905080821115611e1357611e12611a92565b5b92915050565b611e2281611712565b82525050565b6000606082019050611e3d600083018661142b565b611e4a60208301856116e8565b611e576040830184611e19565b94935050505056fea2646970667358221220627e7a11f6c4c6e43cdcceca286c5381223fefd3f2fdbf568645b7e05b10cfb664736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063893d20e811610071578063893d20e8146101665780638da5cb5b146101845780639534e637146101a2578063d3f29ace146101be578063f8fed27c146101da578063fac333ac146101f8576100a9565b8063152d534e146100ae5780631a8cbcaa146100de5780632b1056631461010e5780636c1438621461012c5780637e3d71c31461014a575b600080fd5b6100c860048036038101906100c39190610fa6565b610228565b6040516100d59190610fee565b60405180910390f35b6100f860048036038101906100f39190610fa6565b61028f565b6040516101059190611350565b60405180910390f35b610116610507565b6040516101239190611409565b60405180910390f35b61013461055f565b604051610141919061143a565b60405180910390f35b610164600480360381019061015f9190611670565b610569565b005b61016e6107b3565b60405161017b91906116f7565b60405180910390f35b61018c6107dc565b60405161019991906116f7565b60405180910390f35b6101bc60048036038101906101b79190610fa6565b610800565b005b6101d860048036038101906101d3919061174b565b6109c6565b005b6101e2610d03565b6040516101ef9190611409565b60405180910390f35b610212600480360381019061020d9190610fa6565b610d98565b60405161021f919061143a565b60405180910390f35b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff169050919050565b610297610dbc565b600260008381526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461031b906117ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610347906117ba565b80156103945780601f1061036957610100808354040283529160200191610394565b820191906000526020600020905b81548152906001019060200180831161037757829003601f168201915b505050505081526020016002820160009054906101000a900460ff1660018111156103c2576103c16110da565b5b60018111156103d4576103d36110da565b5b8152602001600382015481526020016004820160048060200260405190810160405280929190826004801561041e576020028201915b81548152602001906001019080831161040a575b5050505050815260200160088201805480602002602001604051908101604052809291908181526020016000905b828210156104f857838290600052602060002001805461046b906117ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610497906117ba565b80156104e45780601f106104b9576101008083540402835291602001916104e4565b820191906000526020600020905b8154815290600101906020018083116104c757829003601f168201915b50505050508152602001906001019061044c565b50505050815250509050919050565b6060600180548060200260200160405190810160405280929190818152602001828054801561055557602002820191906000526020600020905b815481526020019060010190808311610541575b5050505050905090565b6000600554905090565b6001815111801561057c57506004815111155b61058557600080fd5b61058d610dbc565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600554816060018181525050828160200181905250818160a001819052508060026000600554815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816106559190611997565b5060408201518160020160006101000a81548160ff02191690836001811115610681576106806110da565b5b0217905550606082015181600301556080820151816004019060046106a7929190610e20565b5060a08201518160080190805190602001906106c4929190610e60565b50905050600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005549080600181540180825580915050600190039060005260206000200160009091909190915055600160055490806001815401808255809150506001900390600052602060002001600090919091909150557fb447d309fd3b1a27466cdb08ccc02ee5188e9c71fc58af042bafe3e0bb4512306005543360405161078e929190611a69565b60405180910390a1600560008154809291906107a990611ac1565b9190505550505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b803373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089c90611b8c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361094a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094190611bf8565b60405180910390fd5b60016002600084815260200190815260200160002060020160006101000a81548160ff02191690836001811115610984576109836110da565b5b02179055507f5f9f4b9200056c29dcdf9532acb77e0d5368e9f85580b6e1aeff24c36bddea2b82336040516109ba929190611a69565b60405180910390a15050565b60008260ff1610158015610a025750600160026000838152602001908152602001600020600801805490506109fb9190611c18565b8260ff1611155b610a41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3890611c98565b60405180910390fd5b60001515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16151514610ae5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610adc90611d2a565b60405180910390fd5b60006001811115610af957610af86110da565b5b6002600083815260200190815260200160002060020160009054906101000a900460ff166001811115610b2f57610b2e6110da565b5b14610b6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6690611d96565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008460ff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610c17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0e90611bf8565b60405180910390fd5b6001600260008381526020019081526020016000206004018360ff1660048110610c4457610c43611db6565b5b016000828254610c549190611de5565b925050819055506001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055507f094f80829c509370abb2d421a078ba5926755d3de25d021dacf7bbd19853f7a2813384604051610cf793929190611e28565b60405180910390a15050565b6060600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610d8e57602002820191906000526020600020905b815481526020019060010190808311610d7a575b5050505050905090565b60018181548110610da857600080fd5b906000526020600020016000915090505481565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160006001811115610dff57610dfe6110da565b5b815260200160008152602001610e13610eb9565b8152602001606081525090565b8260048101928215610e4f579160200282015b82811115610e4e578251825591602001919060010190610e33565b5b509050610e5c9190610edb565b5090565b828054828255906000526020600020908101928215610ea8579160200282015b82811115610ea7578251829081610e979190611997565b5091602001919060010190610e80565b5b509050610eb59190610ef8565b5090565b6040518060800160405280600490602082028036833780820191505090505090565b5b80821115610ef4576000816000905550600101610edc565b5090565b5b80821115610f185760008181610f0f9190610f1c565b50600101610ef9565b5090565b508054610f28906117ba565b6000825580601f10610f3a5750610f59565b601f016020900490600052602060002090810190610f589190610edb565b5b50565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610f8381610f70565b8114610f8e57600080fd5b50565b600081359050610fa081610f7a565b92915050565b600060208284031215610fbc57610fbb610f66565b5b6000610fca84828501610f91565b91505092915050565b60008115159050919050565b610fe881610fd3565b82525050565b60006020820190506110036000830184610fdf565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061103482611009565b9050919050565b61104481611029565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611084578082015181840152602081019050611069565b60008484015250505050565b6000601f19601f8301169050919050565b60006110ac8261104a565b6110b68185611055565b93506110c6818560208601611066565b6110cf81611090565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061111a576111196110da565b5b50565b600081905061112b82611109565b919050565b600061113b8261111d565b9050919050565b61114b81611130565b82525050565b61115a81610f70565b82525050565b600060049050919050565b600081905092915050565b6000819050919050565b600061118c8383611151565b60208301905092915050565b6000602082019050919050565b6111ae81611160565b6111b8818461116b565b92506111c382611176565b8060005b838110156111f45781516111db8782611180565b96506111e683611198565b9250506001810190506111c7565b505050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061123483836110a1565b905092915050565b6000602082019050919050565b6000611254826111fc565b61125e8185611207565b93508360208202850161127085611218565b8060005b858110156112ac578484038952815161128d8582611228565b94506112988361123c565b925060208a01995050600181019050611274565b50829750879550505050505092915050565b6000610120830160008301516112d7600086018261103b565b50602083015184820360208601526112ef82826110a1565b91505060408301516113046040860182611142565b5060608301516113176060860182611151565b50608083015161132a60808601826111a5565b5060a08301518482036101008601526113438282611249565b9150508091505092915050565b6000602082019050818103600083015261136a81846112be565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000602082019050919050565b60006113b682611372565b6113c0818561137d565b93506113cb8361138e565b8060005b838110156113fc5781516113e38882611180565b97506113ee8361139e565b9250506001810190506113cf565b5085935050505092915050565b6000602082019050818103600083015261142381846113ab565b905092915050565b61143481610f70565b82525050565b600060208201905061144f600083018461142b565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61149782611090565b810181811067ffffffffffffffff821117156114b6576114b561145f565b5b80604052505050565b60006114c9610f5c565b90506114d5828261148e565b919050565b600067ffffffffffffffff8211156114f5576114f461145f565b5b6114fe82611090565b9050602081019050919050565b82818337600083830152505050565b600061152d611528846114da565b6114bf565b9050828152602081018484840111156115495761154861145a565b5b61155484828561150b565b509392505050565b600082601f83011261157157611570611455565b5b813561158184826020860161151a565b91505092915050565b600067ffffffffffffffff8211156115a5576115a461145f565b5b602082029050602081019050919050565b600080fd5b60006115ce6115c98461158a565b6114bf565b905080838252602082019050602084028301858111156115f1576115f06115b6565b5b835b8181101561163857803567ffffffffffffffff81111561161657611615611455565b5b808601611623898261155c565b855260208501945050506020810190506115f3565b5050509392505050565b600082601f83011261165757611656611455565b5b81356116678482602086016115bb565b91505092915050565b6000806040838503121561168757611686610f66565b5b600083013567ffffffffffffffff8111156116a5576116a4610f6b565b5b6116b18582860161155c565b925050602083013567ffffffffffffffff8111156116d2576116d1610f6b565b5b6116de85828601611642565b9150509250929050565b6116f181611029565b82525050565b600060208201905061170c60008301846116e8565b92915050565b600060ff82169050919050565b61172881611712565b811461173357600080fd5b50565b6000813590506117458161171f565b92915050565b6000806040838503121561176257611761610f66565b5b600061177085828601611736565b925050602061178185828601610f91565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806117d257607f821691505b6020821081036117e5576117e461178b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261184d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611810565b6118578683611810565b95508019841693508086168417925050509392505050565b6000819050919050565b600061189461188f61188a84610f70565b61186f565b610f70565b9050919050565b6000819050919050565b6118ae83611879565b6118c26118ba8261189b565b84845461181d565b825550505050565b600090565b6118d76118ca565b6118e28184846118a5565b505050565b5b81811015611906576118fb6000826118cf565b6001810190506118e8565b5050565b601f82111561194b5761191c816117eb565b61192584611800565b81016020851015611934578190505b61194861194085611800565b8301826118e7565b50505b505050565b600082821c905092915050565b600061196e60001984600802611950565b1980831691505092915050565b6000611987838361195d565b9150826002028217905092915050565b6119a08261104a565b67ffffffffffffffff8111156119b9576119b861145f565b5b6119c382546117ba565b6119ce82828561190a565b600060209050601f831160018114611a0157600084156119ef578287015190505b6119f9858261197b565b865550611a61565b601f198416611a0f866117eb565b60005b82811015611a3757848901518255600182019150602085019450602081019050611a12565b86831015611a545784890151611a50601f89168261195d565b8355505b6001600288020188555050505b505050505050565b6000604082019050611a7e600083018561142b565b611a8b60208301846116e8565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611acc82610f70565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611afe57611afd611a92565b5b600182019050919050565b600082825260208201905092915050565b7f46756e6374696f6e2063616c6c6572206973206e6f7420706f6c6c206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b76602183611b09565b9150611b8182611b1a565b604082019050919050565b60006020820190508181036000830152611ba581611b69565b9050919050565b7f506f6c6c20646f65736e27742065786973740000000000000000000000000000600082015250565b6000611be2601283611b09565b9150611bed82611bac565b602082019050919050565b60006020820190508181036000830152611c1181611bd5565b9050919050565b6000611c2382610f70565b9150611c2e83610f70565b9250828203905081811115611c4657611c45611a92565b5b92915050565b7f53656c656374656420696e646578206973206f7574206f662072616e67650000600082015250565b6000611c82601e83611b09565b9150611c8d82611c4c565b602082019050919050565b60006020820190508181036000830152611cb181611c75565b9050919050565b7f46756e6374696f6e2063616c6c65722068617320616c726561647920766f746560008201527f64206f6e2074686520706f6c6c00000000000000000000000000000000000000602082015250565b6000611d14602d83611b09565b9150611d1f82611cb8565b604082019050919050565b60006020820190508181036000830152611d4381611d07565b9050919050565b7f506f6c6c2068617320636c6f7365640000000000000000000000000000000000600082015250565b6000611d80600f83611b09565b9150611d8b82611d4a565b602082019050919050565b60006020820190508181036000830152611daf81611d73565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611df082610f70565b9150611dfb83610f70565b9250828201905080821115611e1357611e12611a92565b5b92915050565b611e2281611712565b82525050565b6000606082019050611e3d600083018661142b565b611e4a60208301856116e8565b611e576040830184611e19565b94935050505056fea2646970667358221220627e7a11f6c4c6e43cdcceca286c5381223fefd3f2fdbf568645b7e05b10cfb664736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 23,
        "contract": "contracts/Polling.sol:Polling",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 26,
        "contract": "contracts/Polling.sol:Polling",
        "label": "ids",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 31,
        "contract": "contracts/Polling.sol:Polling",
        "label": "idToPoll",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(Poll)18_storage)"
      },
      {
        "astId": 36,
        "contract": "contracts/Polling.sol:Polling",
        "label": "addressToIds",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 42,
        "contract": "contracts/Polling.sol:Polling",
        "label": "addressToVoted",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
      },
      {
        "astId": 45,
        "contract": "contracts/Polling.sol:Polling",
        "label": "currentId",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)4_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[4]",
        "numberOfBytes": "128"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(PollState)21": {
        "encoding": "inplace",
        "label": "enum Polling.PollState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bool)"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Poll)18_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Polling.Poll)",
        "numberOfBytes": "32",
        "value": "t_struct(Poll)18_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Poll)18_storage": {
        "encoding": "inplace",
        "label": "struct Polling.Poll",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/Polling.sol:Polling",
            "label": "pollOwner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 5,
            "contract": "contracts/Polling.sol:Polling",
            "label": "question",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 8,
            "contract": "contracts/Polling.sol:Polling",
            "label": "pollState",
            "offset": 0,
            "slot": "2",
            "type": "t_enum(PollState)21"
          },
          {
            "astId": 10,
            "contract": "contracts/Polling.sol:Polling",
            "label": "id",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 14,
            "contract": "contracts/Polling.sol:Polling",
            "label": "votes",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)4_storage"
          },
          {
            "astId": 17,
            "contract": "contracts/Polling.sol:Polling",
            "label": "options",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_string_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}